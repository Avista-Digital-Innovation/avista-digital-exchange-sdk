# Generated by ariadne-codegen on 2023-07-17 15:57
# Source: ../step_1_gqlg/output/queries.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    DataCaptureAssetAttributeSchemaType,
    DataCaptureAssetAttributeType,
    DataCaptureDataModelState,
)


class DataCaptureUpdateDataModel(BaseModel):
    data_capture_update_data_model: Optional[
        "DataCaptureUpdateDataModelDataCaptureUpdateDataModel"
    ] = Field(alias="dataCapture_updateDataModel")


class DataCaptureUpdateDataModelDataCaptureUpdateDataModel(BaseModel):
    date_created: Optional[str] = Field(alias="dateCreated")
    date_updated: Optional[str] = Field(alias="dateUpdated")
    errors: Optional[List[Optional[str]]]
    items: List[Optional["DataCaptureUpdateDataModelDataCaptureUpdateDataModelItems"]]
    state: DataCaptureDataModelState
    version: Optional[int]


class DataCaptureUpdateDataModelDataCaptureUpdateDataModelItems(BaseModel):
    attributes: Optional[
        List[
            Optional[
                "DataCaptureUpdateDataModelDataCaptureUpdateDataModelItemsAttributes"
            ]
        ]
    ]
    description: Optional[str]
    display_name: str = Field(alias="displayName")
    user_defined_id: str = Field(alias="userDefinedId")


class DataCaptureUpdateDataModelDataCaptureUpdateDataModelItemsAttributes(BaseModel):
    attribute_type: DataCaptureAssetAttributeType = Field(alias="attributeType")
    description: Optional[str]
    display_name: str = Field(alias="displayName")
    schema_type: DataCaptureAssetAttributeSchemaType = Field(alias="schemaType")
    unit: Optional[str]
    user_defined_id: str = Field(alias="userDefinedId")


DataCaptureUpdateDataModel.update_forward_refs()
DataCaptureUpdateDataModelDataCaptureUpdateDataModel.update_forward_refs()
DataCaptureUpdateDataModelDataCaptureUpdateDataModelItems.update_forward_refs()
DataCaptureUpdateDataModelDataCaptureUpdateDataModelItemsAttributes.update_forward_refs()
