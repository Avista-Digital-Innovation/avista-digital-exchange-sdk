# Generated by ariadne-codegen on 2023-07-17 15:57
# Source: ../step_1_gqlg/output/queries.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    DataCaptureAssetAttributeSchemaType,
    DataCaptureAssetAttributeType,
    DataCaptureDataModelState,
    DataCaptureState,
    DataCaptureTimeConfigType,
    DataCaptureTimeConfigurationState,
    DataCaptureType,
)


class DataCaptureCreateCapture(BaseModel):
    data_capture_create_capture: Optional[
        "DataCaptureCreateCaptureDataCaptureCreateCapture"
    ] = Field(alias="dataCapture_createCapture")


class DataCaptureCreateCaptureDataCaptureCreateCapture(BaseModel):
    capture_id: str = Field(alias="captureId")
    capture_type: DataCaptureType = Field(alias="captureType")
    data_model: Optional[
        "DataCaptureCreateCaptureDataCaptureCreateCaptureDataModel"
    ] = Field(alias="dataModel")
    date_created: str = Field(alias="dateCreated")
    date_updated: str = Field(alias="dateUpdated")
    description: Optional[str]
    display_name: str = Field(alias="displayName")
    owner_user_id: str = Field(alias="ownerUserId")
    state: DataCaptureState
    state_history: Optional[
        List[Optional["DataCaptureCreateCaptureDataCaptureCreateCaptureStateHistory"]]
    ] = Field(alias="stateHistory")
    time_settings: Optional[
        "DataCaptureCreateCaptureDataCaptureCreateCaptureTimeSettings"
    ] = Field(alias="timeSettings")


class DataCaptureCreateCaptureDataCaptureCreateCaptureDataModel(BaseModel):
    date_created: Optional[str] = Field(alias="dateCreated")
    date_updated: Optional[str] = Field(alias="dateUpdated")
    errors: Optional[List[Optional[str]]]
    items: List[
        Optional["DataCaptureCreateCaptureDataCaptureCreateCaptureDataModelItems"]
    ]
    state: DataCaptureDataModelState
    version: Optional[int]


class DataCaptureCreateCaptureDataCaptureCreateCaptureDataModelItems(BaseModel):
    attributes: Optional[
        List[
            Optional[
                "DataCaptureCreateCaptureDataCaptureCreateCaptureDataModelItemsAttributes"
            ]
        ]
    ]
    description: Optional[str]
    display_name: str = Field(alias="displayName")
    user_defined_id: str = Field(alias="userDefinedId")


class DataCaptureCreateCaptureDataCaptureCreateCaptureDataModelItemsAttributes(
    BaseModel
):
    attribute_type: DataCaptureAssetAttributeType = Field(alias="attributeType")
    description: Optional[str]
    display_name: str = Field(alias="displayName")
    schema_type: DataCaptureAssetAttributeSchemaType = Field(alias="schemaType")
    unit: Optional[str]
    user_defined_id: str = Field(alias="userDefinedId")


class DataCaptureCreateCaptureDataCaptureCreateCaptureStateHistory(BaseModel):
    date_created: str = Field(alias="dateCreated")
    message: Optional[str]
    new_state: DataCaptureState = Field(alias="newState")


class DataCaptureCreateCaptureDataCaptureCreateCaptureTimeSettings(BaseModel):
    actual_start_time: Optional[str] = Field(alias="actualStartTime")
    actual_stop_time: Optional[str] = Field(alias="actualStopTime")
    errors: Optional[List[Optional[str]]]
    scheduled_start_time: Optional[str] = Field(alias="scheduledStartTime")
    scheduled_stop_time: Optional[str] = Field(alias="scheduledStopTime")
    start_time_type: DataCaptureTimeConfigType = Field(alias="startTimeType")
    state: Optional[DataCaptureTimeConfigurationState]
    stop_time_type: DataCaptureTimeConfigType = Field(alias="stopTimeType")


DataCaptureCreateCapture.update_forward_refs()
DataCaptureCreateCaptureDataCaptureCreateCapture.update_forward_refs()
DataCaptureCreateCaptureDataCaptureCreateCaptureDataModel.update_forward_refs()
DataCaptureCreateCaptureDataCaptureCreateCaptureDataModelItems.update_forward_refs()
DataCaptureCreateCaptureDataCaptureCreateCaptureDataModelItemsAttributes.update_forward_refs()
DataCaptureCreateCaptureDataCaptureCreateCaptureStateHistory.update_forward_refs()
DataCaptureCreateCaptureDataCaptureCreateCaptureTimeSettings.update_forward_refs()
