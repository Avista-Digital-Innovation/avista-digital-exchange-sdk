# Generated by ariadne-codegen on 2023-07-17 15:57
# Source: ../step_1_gqlg/output/queries.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    CollaborativeMemberOrganizationState,
    CollaborativeMemberPermission,
    UserAccountState,
    UserRole,
)


class PlatformAdminUpdateCollaborative(BaseModel):
    platform_admin_update_collaborative: Optional[
        "PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborative"
    ] = Field(alias="platformAdmin_updateCollaborative")


class PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborative(BaseModel):
    collaborative_id: str = Field(alias="collaborativeId")
    description: Optional[str]
    host_organization_id: str = Field(alias="hostOrganizationId")
    member_organizations: Optional[
        List[
            Optional[
                "PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizations"
            ]
        ]
    ] = Field(alias="memberOrganizations")
    name: str


class PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizations(
    BaseModel
):
    access_approved_by_user_id: Optional[str] = Field(alias="accessApprovedByUserId")
    collaborative_id: str = Field(alias="collaborativeId")
    member_state: Optional[CollaborativeMemberOrganizationState] = Field(
        alias="memberState"
    )
    organization: Optional[
        "PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsOrganization"
    ]
    submitted_by_user: Optional[
        "PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsSubmittedByUser"
    ] = Field(alias="submittedByUser")
    submitted_timestamp: Optional[str] = Field(alias="submittedTimestamp")
    users_in_collaborative: Optional[
        List[
            Optional[
                "PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsUsersInCollaborative"
            ]
        ]
    ] = Field(alias="usersInCollaborative")


class PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsOrganization(
    BaseModel
):
    host_organization: Optional[bool] = Field(alias="hostOrganization")
    name: str
    organization_id: str = Field(alias="organizationId")


class PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsSubmittedByUser(
    BaseModel
):
    email: Optional[str]
    first_name: Optional[str] = Field(alias="firstName")
    last_active: Optional[str] = Field(alias="lastActive")
    last_name: Optional[str] = Field(alias="lastName")
    mobile: Optional[str]
    organization: Optional[
        "PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsSubmittedByUserOrganization"
    ]
    user_account_state: Optional[UserAccountState] = Field(alias="userAccountState")
    user_id: str = Field(alias="userId")
    user_roles: Optional[List[Optional[UserRole]]] = Field(alias="userRoles")


class PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsSubmittedByUserOrganization(
    BaseModel
):
    host_organization: Optional[bool] = Field(alias="hostOrganization")
    name: str
    organization_id: str = Field(alias="organizationId")


class PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsUsersInCollaborative(
    BaseModel
):
    permission: Optional[CollaborativeMemberPermission]
    user: Optional[
        "PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsUsersInCollaborativeUser"
    ]


class PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsUsersInCollaborativeUser(
    BaseModel
):
    email: Optional[str]
    first_name: Optional[str] = Field(alias="firstName")
    last_active: Optional[str] = Field(alias="lastActive")
    last_name: Optional[str] = Field(alias="lastName")
    mobile: Optional[str]
    organization: Optional[
        "PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsUsersInCollaborativeUserOrganization"
    ]
    user_account_state: Optional[UserAccountState] = Field(alias="userAccountState")
    user_id: str = Field(alias="userId")
    user_roles: Optional[List[Optional[UserRole]]] = Field(alias="userRoles")


class PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsUsersInCollaborativeUserOrganization(
    BaseModel
):
    host_organization: Optional[bool] = Field(alias="hostOrganization")
    name: str
    organization_id: str = Field(alias="organizationId")


PlatformAdminUpdateCollaborative.update_forward_refs()
PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborative.update_forward_refs()
PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizations.update_forward_refs()
PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsOrganization.update_forward_refs()
PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsSubmittedByUser.update_forward_refs()
PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsSubmittedByUserOrganization.update_forward_refs()
PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsUsersInCollaborative.update_forward_refs()
PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsUsersInCollaborativeUser.update_forward_refs()
PlatformAdminUpdateCollaborativePlatformAdminUpdateCollaborativeMemberOrganizationsUsersInCollaborativeUserOrganization.update_forward_refs()
