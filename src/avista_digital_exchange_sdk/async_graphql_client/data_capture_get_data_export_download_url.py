# Generated by ariadne-codegen on 2023-07-17 15:57
# Source: ../step_1_gqlg/output/queries.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import DataCaptureDataExportState, DataCaptureDataExportType


class DataCaptureGetDataExportDownloadUrl(BaseModel):
    data_capture_get_data_export_download_url: Optional[
        "DataCaptureGetDataExportDownloadUrlDataCaptureGetDataExportDownloadUrl"
    ] = Field(alias="dataCapture_getDataExportDownloadUrl")


class DataCaptureGetDataExportDownloadUrlDataCaptureGetDataExportDownloadUrl(BaseModel):
    date_completed: Optional[str] = Field(alias="dateCompleted")
    date_started: Optional[str] = Field(alias="dateStarted")
    export_type: Optional[DataCaptureDataExportType] = Field(alias="exportType")
    logs: Optional[List[Optional[str]]]
    name: Optional[str]
    state: DataCaptureDataExportState
    url: Optional[str]


DataCaptureGetDataExportDownloadUrl.update_forward_refs()
DataCaptureGetDataExportDownloadUrlDataCaptureGetDataExportDownloadUrl.update_forward_refs()
